// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20240815015722_fixOrders")]
    partial class fixOrders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Choice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool>("IsAnswer")
                        .HasColumnType("bit")
                        .HasColumnName("IsAnswer");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("QuestionId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Choices", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ActivationKey");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time")
                        .HasColumnName("Duration");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Exams", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ExamQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ExamId");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("QuestionId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ExamQuestions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackId");

                    b.Property<int>("Quota")
                        .HasColumnType("int")
                        .HasColumnName("Quota");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("eabc4ae8-abba-4a47-af7a-1c10acd358f2"),
                            CreatedDate = new DateTime(2024, 8, 15, 4, 57, 20, 144, DateTimeKind.Local).AddTicks(4213),
                            LessonId = new Guid("20bb50c4-c76b-43b8-8789-c938374ca64f"),
                            Name = "Grup Yorum",
                            PackId = new Guid("7041e585-d295-44c6-a9b7-178c17035099"),
                            Quota = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.GroupUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("GroupUsers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Homework", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("SessionId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UploadFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UploadFile");

                    b.HasKey("Id");

                    b.ToTable("Homework", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.HomeworkTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Attachment");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<int>("HomeworkId")
                        .HasColumnType("int")
                        .HasColumnName("HomeworkId");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentId");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("TransferDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("HomeworkTransfers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<short>("Depth")
                        .HasColumnType("smallint")
                        .HasColumnName("Depth");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Lessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5f430d8-f015-41b4-9785-462abce6a26f"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8265),
                            Depth = (short)0,
                            Order = 1,
                            Title = "İlkokul"
                        },
                        new
                        {
                            Id = new Guid("3fda3ac0-b282-4435-bf74-2fd2323462c3"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8272),
                            Depth = (short)1,
                            Order = 1,
                            ParentId = new Guid("a5f430d8-f015-41b4-9785-462abce6a26f"),
                            Title = "Temel Öğrenim"
                        },
                        new
                        {
                            Id = new Guid("906a2c13-dab7-40ee-bbbb-44214339d86c"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8276),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("3fda3ac0-b282-4435-bf74-2fd2323462c3"),
                            Title = "1. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("e03fc96a-ebdf-4364-b0f0-db757b80e38f"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8278),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("906a2c13-dab7-40ee-bbbb-44214339d86c"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("7b00274d-5cc1-46a5-a726-437a63733b70"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8302),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("906a2c13-dab7-40ee-bbbb-44214339d86c"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("dae95d09-b1bb-4893-942d-8ed8617ee315"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8306),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("906a2c13-dab7-40ee-bbbb-44214339d86c"),
                            Title = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("15e99b4e-597b-4c8c-9fc9-2c4ec26f9dcd"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8309),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("3fda3ac0-b282-4435-bf74-2fd2323462c3"),
                            Title = "2. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("57868efd-3206-4180-adc6-336dbe441a47"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8311),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("15e99b4e-597b-4c8c-9fc9-2c4ec26f9dcd"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("283f8007-d7e7-4b75-8546-71cad636a766"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8314),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("15e99b4e-597b-4c8c-9fc9-2c4ec26f9dcd"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("3c74cc40-94e0-47a6-a270-4af21c02130d"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8317),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("15e99b4e-597b-4c8c-9fc9-2c4ec26f9dcd"),
                            Title = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("70454864-38f3-47ab-a9b5-2cbd049555ed"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8321),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("15e99b4e-597b-4c8c-9fc9-2c4ec26f9dcd"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("6228f98d-ec40-4635-840c-3def2612aafd"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8323),
                            Depth = (short)1,
                            Order = 2,
                            ParentId = new Guid("a5f430d8-f015-41b4-9785-462abce6a26f"),
                            Title = "İleri Öğrenim"
                        },
                        new
                        {
                            Id = new Guid("dd154df5-0234-4d5d-b51e-8cb2bd05c6cf"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8329),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("6228f98d-ec40-4635-840c-3def2612aafd"),
                            Title = "3. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("f47af7a4-1e49-4496-8154-ad6e4113e1b2"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8332),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("dd154df5-0234-4d5d-b51e-8cb2bd05c6cf"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("1c2c1996-0f62-451f-a750-cfdbf5dc06df"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8334),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("dd154df5-0234-4d5d-b51e-8cb2bd05c6cf"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("5a81d372-9ed4-447a-9261-62eeb31f3651"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8336),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("dd154df5-0234-4d5d-b51e-8cb2bd05c6cf"),
                            Title = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("356e4c5c-691a-44be-853c-95103a46455b"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8339),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("dd154df5-0234-4d5d-b51e-8cb2bd05c6cf"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("861374d7-a152-440e-bccb-a7d2ff5c7c8e"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8342),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("dd154df5-0234-4d5d-b51e-8cb2bd05c6cf"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8345),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("6228f98d-ec40-4635-840c-3def2612aafd"),
                            Title = "4. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("c52718eb-0306-4fdf-8662-98716a24d253"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8347),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("2d962577-bae6-47ef-8767-8f0bf29a4c2a"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8352),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("7f506f90-3b36-4e14-9485-381fd3e60c58"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8354),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("62258b7e-4641-4901-a7c7-40952a0d5bc7"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8356),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("d8931f5c-9fe9-4815-b54b-ac602c0e1c16"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8359),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("e8e6458e-eff7-4dfa-b543-39c4a697333d"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8361),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("2a3ec621-e466-4e1b-8afa-3198b158e869"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("ab46c33b-a16e-47c1-983a-f6eaf8337bfe"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8364),
                            Depth = (short)0,
                            Order = 2,
                            Title = "Ortaokul"
                        },
                        new
                        {
                            Id = new Guid("1683b3a2-5351-472f-b36e-60ed5cf531b1"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8366),
                            Depth = (short)1,
                            Order = 1,
                            ParentId = new Guid("ab46c33b-a16e-47c1-983a-f6eaf8337bfe"),
                            Title = "LGS"
                        },
                        new
                        {
                            Id = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8369),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("1683b3a2-5351-472f-b36e-60ed5cf531b1"),
                            Title = "5. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("c31afdb1-7e65-4721-9228-58bf2efcfc53"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8373),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("7cc59221-4572-42e4-90ab-4a91389a2d0c"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8375),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("9ff85e40-b8ae-4c4e-b2ca-d6aea4609431"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8378),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("201909e1-13a6-4849-a8ab-299e3d1a2109"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8380),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("c7e518d4-a529-41d9-a82b-4d366c617484"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8383),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("0c204d61-8765-4277-ac7c-14c787611df8"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8386),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("bbaed62e-88b4-404d-8e02-ae46e74ab7d0"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8389),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("1683b3a2-5351-472f-b36e-60ed5cf531b1"),
                            Title = "6. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("f67c94a9-515b-4b2a-9a10-ed78cfee0116"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8391),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("3d3742e6-4db8-43f4-b243-59a5596a7610"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8396),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("291937ee-56aa-4225-86ed-65b0fd9304a6"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8398),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("0de4a29b-f1c9-4999-84d5-60a2e4f4f586"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8400),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("48931891-9d36-432a-9736-98bc1b73d5f1"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8403),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("fa59598b-f90f-44a6-b880-0bf9c0cc6387"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8405),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("faec20e4-8d56-4826-b052-c3fcc0e9faf6"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8407),
                            Depth = (short)2,
                            Order = 3,
                            ParentId = new Guid("1683b3a2-5351-472f-b36e-60ed5cf531b1"),
                            Title = "7. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("6edfd2e8-3266-4ad3-b502-c137bebb973e"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8410),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("08d8c351-a0df-4e2a-9c3d-add2d449914d"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8413),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("34fc5f67-383b-446e-9490-539952a34489"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8417),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("0788b237-6e71-4c58-8778-bfeb6dc155e7"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8420),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("75c35a79-b83f-4474-a47c-d90483d5032f"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8422),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("2ddcb429-1f6b-4245-aa52-21fac1b2a2f2"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8425),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("d1eac796-d5e6-459a-948e-7665c019d598"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8427),
                            Depth = (short)2,
                            Order = 4,
                            ParentId = new Guid("1683b3a2-5351-472f-b36e-60ed5cf531b1"),
                            Title = "8. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("3ef95911-c85c-432d-9a4c-fc79e2cb3432"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8429),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("c770a487-05da-48c8-b759-10e3558a558a"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8432),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("3144adef-42a5-408b-89f7-d1a3073806a5"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8434),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            Title = "T.C. İnkılâp Tarihi ve Atatürkçülük"
                        },
                        new
                        {
                            Id = new Guid("5b1a013f-9640-4bdd-ad16-192a3eea67d7"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8439),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("8d64b698-39ac-4ea6-a91e-41952d93a933"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8441),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("9d7cc4e5-bbac-497b-85ce-1ba92b808bb4"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8444),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("a93cbda6-940e-48c4-9b9a-c2b80f60c542"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("20bb50c4-c76b-43b8-8789-c938374ca64f"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8445),
                            Depth = (short)0,
                            Order = 3,
                            Title = "Lise"
                        },
                        new
                        {
                            Id = new Guid("918f7058-6abf-43c4-9b83-5613ee8b48ae"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8447),
                            Depth = (short)1,
                            Order = 1,
                            ParentId = new Guid("20bb50c4-c76b-43b8-8789-c938374ca64f"),
                            Title = "TYT"
                        },
                        new
                        {
                            Id = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8450),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("918f7058-6abf-43c4-9b83-5613ee8b48ae"),
                            Title = "9. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("1e18b25a-6587-4a97-9087-0362f3e4827c"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8452),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Türk Dili ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("04f7f19d-633b-4fd1-a8d3-cd6c7865182a"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8455),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("c704cba2-9647-4ccb-a7b7-ef960fec21ef"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8518),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("c245d8dd-e49c-41e9-9be8-118e1e972189"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8524),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("64a65446-ac58-4028-ba9d-cf835a2a0db2"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8527),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("65e8f776-6e2a-401d-a22d-847c798a6b30"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8529),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("64a65446-ac58-4028-ba9d-cf835a2a0db2"),
                            Title = "Almanca"
                        },
                        new
                        {
                            Id = new Guid("2fad1cc3-49b8-4e6b-ac01-c9be8d223afd"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8533),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("64a65446-ac58-4028-ba9d-cf835a2a0db2"),
                            Title = "İngilizce"
                        },
                        new
                        {
                            Id = new Guid("55abfedc-d890-467f-a233-8cfce49bce90"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8536),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("0d6909a1-0e71-489f-905b-2ed261e8dbd8"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8539),
                            Depth = (short)3,
                            Order = 7,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("aba27986-05e5-46e1-871e-dcfdf8d395ad"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8541),
                            Depth = (short)3,
                            Order = 8,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("cc01367a-8dda-4b92-b412-3e0a1cf3cd15"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8544),
                            Depth = (short)3,
                            Order = 9,
                            ParentId = new Guid("8d4245b4-ad5a-4739-9a65-50a4db9ac5f7"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8548),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("918f7058-6abf-43c4-9b83-5613ee8b48ae"),
                            Title = "10. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("1bfe3978-e8dd-4597-85da-bb1d3a0975c5"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8551),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Türk Dili ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("4b1fade3-4755-44f8-b3a5-144f2ff51364"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8553),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("40805ac0-e80e-45aa-86e6-a5fb70f2cf23"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8555),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("486bc860-7e19-47ec-8c7b-be90ed24090f"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8558),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("7215bd7f-8051-4b3d-bd1c-99ba886ef9a9"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8560),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("94e7c73c-edaf-4be5-9f60-27be95cf47f3"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8564),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("7215bd7f-8051-4b3d-bd1c-99ba886ef9a9"),
                            Title = "Almanca"
                        },
                        new
                        {
                            Id = new Guid("7897c271-2183-4fd9-bb14-7144e89a7791"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8566),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("7215bd7f-8051-4b3d-bd1c-99ba886ef9a9"),
                            Title = "İngilizce"
                        },
                        new
                        {
                            Id = new Guid("d2261b94-fe7c-43a8-8a32-9e029439339b"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8571),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("fffb7395-1b39-44a7-9652-ec12beba9f90"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8573),
                            Depth = (short)3,
                            Order = 7,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("038e0339-bb75-40ed-8ad9-01f7fa84088b"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8576),
                            Depth = (short)3,
                            Order = 8,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("860418e1-afdf-4fbe-bddb-cdda7af89e31"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8578),
                            Depth = (short)3,
                            Order = 9,
                            ParentId = new Guid("88925c54-0bef-4e9e-8e90-ed5a7867849f"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("95f76e95-8324-4971-8dae-dbfbd0740c09"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8581),
                            Depth = (short)1,
                            Order = 2,
                            ParentId = new Guid("20bb50c4-c76b-43b8-8789-c938374ca64f"),
                            Title = "AYT"
                        },
                        new
                        {
                            Id = new Guid("fd8728cd-6f7a-4606-af45-0999607f1ce6"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8583),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("95f76e95-8324-4971-8dae-dbfbd0740c09"),
                            Title = "11. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("b42fac2c-488a-49f1-a85d-7888ca8d9c59"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8586),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("fd8728cd-6f7a-4606-af45-0999607f1ce6"),
                            Title = "Sayısal"
                        },
                        new
                        {
                            Id = new Guid("41a4c8bf-1c5d-4de9-b28d-933f30907e83"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8589),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("b42fac2c-488a-49f1-a85d-7888ca8d9c59"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("29f293b1-14cd-4af0-8ed1-052e9b816603"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8593),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("b42fac2c-488a-49f1-a85d-7888ca8d9c59"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("f21b5d5a-bae3-4d84-98f9-ccfe972eb359"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8596),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("b42fac2c-488a-49f1-a85d-7888ca8d9c59"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("7805bb63-ac4d-4763-bf24-f3d4f9c0870d"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8598),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("b42fac2c-488a-49f1-a85d-7888ca8d9c59"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("2b1f00b6-7004-400a-aef4-15bb8395a663"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8601),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("b42fac2c-488a-49f1-a85d-7888ca8d9c59"),
                            Title = "Geometri"
                        },
                        new
                        {
                            Id = new Guid("9ac2b93c-89b2-4d58-b0f6-3b18258512ca"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8603),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("fd8728cd-6f7a-4606-af45-0999607f1ce6"),
                            Title = "Sözel"
                        },
                        new
                        {
                            Id = new Guid("5a718ff8-c76f-42a5-88de-f0cde5a9d0d5"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8606),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("9ac2b93c-89b2-4d58-b0f6-3b18258512ca"),
                            Title = "Türk Dili Ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("442ff863-be4a-4637-99b9-94a56830e11e"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8608),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("9ac2b93c-89b2-4d58-b0f6-3b18258512ca"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("60d540ab-feca-40c4-a02f-9e77f99c43dd"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8611),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("9ac2b93c-89b2-4d58-b0f6-3b18258512ca"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("c72398fc-de83-4298-b012-3aaa4ceeac20"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8615),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("9ac2b93c-89b2-4d58-b0f6-3b18258512ca"),
                            Title = "Felsefe"
                        },
                        new
                        {
                            Id = new Guid("12c4dd98-85e5-4c30-821c-b3d6a69017d2"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8618),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("9ac2b93c-89b2-4d58-b0f6-3b18258512ca"),
                            Title = "Din Kültürü Ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("de36a3c4-50c2-4397-a8f3-cc4419cc4b41"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8620),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("95f76e95-8324-4971-8dae-dbfbd0740c09"),
                            Title = "12. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("6f80e241-a12e-4f1b-bdad-fe32005b55af"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8622),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("de36a3c4-50c2-4397-a8f3-cc4419cc4b41"),
                            Title = "Sayısal"
                        },
                        new
                        {
                            Id = new Guid("79d2003b-8b08-49c2-90a7-6cfb7c4da14d"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8625),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("6f80e241-a12e-4f1b-bdad-fe32005b55af"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("fadc1110-ad73-4f80-9612-1ffa63383aa7"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8627),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("6f80e241-a12e-4f1b-bdad-fe32005b55af"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("06bd68ae-9ea4-40c0-96c5-30c62f42ad23"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8630),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("6f80e241-a12e-4f1b-bdad-fe32005b55af"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("94ea84a0-d34f-43ee-b5f4-82206ab34d24"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8632),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("6f80e241-a12e-4f1b-bdad-fe32005b55af"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("d5635e32-5f69-479a-97e7-6d92d466d3d3"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8637),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("6f80e241-a12e-4f1b-bdad-fe32005b55af"),
                            Title = "Geometri"
                        },
                        new
                        {
                            Id = new Guid("9cc3094e-e324-4515-bcc1-99e6bc64b8e7"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8639),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("de36a3c4-50c2-4397-a8f3-cc4419cc4b41"),
                            Title = "Sözel"
                        },
                        new
                        {
                            Id = new Guid("eca011d0-0543-421f-abbb-509f234a007e"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8642),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("9cc3094e-e324-4515-bcc1-99e6bc64b8e7"),
                            Title = "Türk Dili Ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("566f23bb-5c10-48fe-b211-e3d0555acc01"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8644),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("9cc3094e-e324-4515-bcc1-99e6bc64b8e7"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("faca2dad-c713-43f7-8649-895dca6f1ed6"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8647),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("9cc3094e-e324-4515-bcc1-99e6bc64b8e7"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("8de3d0e3-8368-4029-99cd-b173c5f97c2e"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8649),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("9cc3094e-e324-4515-bcc1-99e6bc64b8e7"),
                            Title = "Felsefe"
                        },
                        new
                        {
                            Id = new Guid("621ffedc-008d-4e67-9661-92b424ee83f3"),
                            CreatedDate = new DateTime(2024, 8, 15, 1, 57, 20, 145, DateTimeKind.Utc).AddTicks(8652),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("9cc3094e-e324-4515-bcc1-99e6bc64b8e7"),
                            Title = "Din Kültürü Ve Ahlak Bilgisi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OnBasvuru", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<double>("NotOrtalamasi")
                        .HasColumnType("float")
                        .HasColumnName("NotOrtalamasi");

                    b.Property<string>("OgrCepNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OgrCepNo");

                    b.Property<string>("OgrEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OgrEmail");

                    b.Property<string>("OkulAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OkulAdi");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("VeliCepNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VeliCepNo");

                    b.Property<string>("VeliFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VeliFirstName");

                    b.Property<string>("VeliLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VeliLastName");

                    b.HasKey("Id");

                    b.ToTable("OnBasvurus", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Read"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Write"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.RevokeToken"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Read"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Write"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Create"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Update"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Delete"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Admin"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Read"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Write"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Create"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Update"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Delete"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Admin"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Read"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Write"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Create"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Update"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Delete"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Admin"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Read"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Write"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Create"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Update"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Delete"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Admin"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Read"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Write"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Create"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Update"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Delete"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Admin"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Read"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Write"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Create"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Update"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Delete"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Admin"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Read"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Write"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Create"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Update"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Delete"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Admin"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Read"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Write"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Create"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Update"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Delete"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Admin"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Read"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Write"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Create"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Update"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Delete"
                        },
                        new
                        {
                            Id = 60,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Admin"
                        },
                        new
                        {
                            Id = 61,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Read"
                        },
                        new
                        {
                            Id = 62,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Write"
                        },
                        new
                        {
                            Id = 63,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Create"
                        },
                        new
                        {
                            Id = 64,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Update"
                        },
                        new
                        {
                            Id = 65,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Delete"
                        },
                        new
                        {
                            Id = 66,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Admin"
                        },
                        new
                        {
                            Id = 67,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Read"
                        },
                        new
                        {
                            Id = 68,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Write"
                        },
                        new
                        {
                            Id = 69,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Create"
                        },
                        new
                        {
                            Id = 70,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Update"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Delete"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Admin"
                        },
                        new
                        {
                            Id = 73,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Read"
                        },
                        new
                        {
                            Id = 74,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Write"
                        },
                        new
                        {
                            Id = 75,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Create"
                        },
                        new
                        {
                            Id = 76,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Update"
                        },
                        new
                        {
                            Id = 77,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Delete"
                        },
                        new
                        {
                            Id = 78,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Admin"
                        },
                        new
                        {
                            Id = 79,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Read"
                        },
                        new
                        {
                            Id = 80,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Write"
                        },
                        new
                        {
                            Id = 81,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Create"
                        },
                        new
                        {
                            Id = 82,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Update"
                        },
                        new
                        {
                            Id = 83,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Delete"
                        },
                        new
                        {
                            Id = 84,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Admin"
                        },
                        new
                        {
                            Id = 85,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Read"
                        },
                        new
                        {
                            Id = 86,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Write"
                        },
                        new
                        {
                            Id = 87,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Create"
                        },
                        new
                        {
                            Id = 88,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Update"
                        },
                        new
                        {
                            Id = 89,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Delete"
                        },
                        new
                        {
                            Id = 90,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Admin"
                        },
                        new
                        {
                            Id = 91,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Read"
                        },
                        new
                        {
                            Id = 92,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Write"
                        },
                        new
                        {
                            Id = 93,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Create"
                        },
                        new
                        {
                            Id = 94,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Update"
                        },
                        new
                        {
                            Id = 95,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Delete"
                        },
                        new
                        {
                            Id = 96,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Admin"
                        },
                        new
                        {
                            Id = 97,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Read"
                        },
                        new
                        {
                            Id = 98,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Write"
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Create"
                        },
                        new
                        {
                            Id = 100,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Update"
                        },
                        new
                        {
                            Id = 101,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Delete"
                        },
                        new
                        {
                            Id = 102,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Admin"
                        },
                        new
                        {
                            Id = 103,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Read"
                        },
                        new
                        {
                            Id = 104,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Write"
                        },
                        new
                        {
                            Id = 105,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Create"
                        },
                        new
                        {
                            Id = 106,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Update"
                        },
                        new
                        {
                            Id = 107,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Delete"
                        },
                        new
                        {
                            Id = 108,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Admin"
                        },
                        new
                        {
                            Id = 109,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Read"
                        },
                        new
                        {
                            Id = 110,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Write"
                        },
                        new
                        {
                            Id = 111,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Create"
                        },
                        new
                        {
                            Id = 112,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Update"
                        },
                        new
                        {
                            Id = 113,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Delete"
                        },
                        new
                        {
                            Id = 114,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.GetListWithParent"
                        },
                        new
                        {
                            Id = 115,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.GetListQuestinWithExam"
                        },
                        new
                        {
                            Id = 116,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Admin"
                        },
                        new
                        {
                            Id = 117,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Read"
                        },
                        new
                        {
                            Id = 118,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Write"
                        },
                        new
                        {
                            Id = 119,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Create"
                        },
                        new
                        {
                            Id = 120,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Update"
                        },
                        new
                        {
                            Id = 121,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Delete"
                        },
                        new
                        {
                            Id = 122,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Admin"
                        },
                        new
                        {
                            Id = 123,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Read"
                        },
                        new
                        {
                            Id = 124,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Write"
                        },
                        new
                        {
                            Id = 125,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Create"
                        },
                        new
                        {
                            Id = 126,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Update"
                        },
                        new
                        {
                            Id = 127,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Delete"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<byte[]>("SecretKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("SecretKey");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Pack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<int>("PriceCurrency")
                        .HasColumnType("int")
                        .HasColumnName("PriceCurrency");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int")
                        .HasColumnName("TaxRate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Packs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7041e585-d295-44c6-a9b7-178c17035099"),
                            CreatedDate = new DateTime(2024, 8, 15, 4, 57, 20, 147, DateTimeKind.Local).AddTicks(3304),
                            Description = "dsa",
                            Price = 45m,
                            PriceCurrency = 1,
                            TaxRate = 0,
                            Title = "Fırsat Paketi"
                        },
                        new
                        {
                            Id = new Guid("2a004e5d-eacf-4039-a484-f167c26d648f"),
                            CreatedDate = new DateTime(2024, 8, 15, 4, 57, 20, 147, DateTimeKind.Local).AddTicks(3324),
                            Description = "dsa",
                            Price = 45m,
                            PriceCurrency = 1,
                            TaxRate = 0,
                            Title = "Aile Paketi"
                        },
                        new
                        {
                            Id = new Guid("0df77ed0-523d-4c2a-84c1-6afa8825d69e"),
                            CreatedDate = new DateTime(2024, 8, 15, 4, 57, 20, 147, DateTimeKind.Local).AddTicks(3334),
                            Description = "dsa",
                            Price = 45m,
                            PriceCurrency = 1,
                            TaxRate = 0,
                            Title = "Deneme Paketi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PackCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("PackCourses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Questions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedByIp");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpiresDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiresDate");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReplacedByToken");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RevokedByIp");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RevokedDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Token");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("Description");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("int")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b1e3e41-2936-4dc7-98d5-f891828c675d"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dersnet@zurafworks",
                            FirstName = "Ahmet",
                            LastName = "Çiftçi",
                            PasswordHash = new byte[] { 135, 231, 85, 234, 187, 41, 24, 35, 57, 53, 8, 16, 179, 216, 139, 231, 227, 230, 86, 40, 214, 153, 149, 199, 138, 250, 113, 102, 181, 224, 131, 88, 220, 233, 250, 154, 121, 47, 164, 147, 51, 102, 157, 61, 227, 187, 151, 30, 182, 135, 99, 50, 254, 201, 193, 226, 21, 88, 84, 92, 111, 189, 98, 30 },
                            PasswordSalt = new byte[] { 192, 64, 50, 97, 162, 131, 93, 48, 47, 219, 117, 53, 63, 28, 221, 36, 28, 235, 143, 91, 128, 108, 108, 81, 241, 170, 221, 211, 134, 247, 66, 156, 77, 87, 191, 249, 185, 215, 239, 235, 82, 214, 96, 10, 175, 233, 49, 64, 168, 153, 239, 10, 90, 63, 177, 244, 235, 176, 162, 181, 136, 251, 170, 201, 9, 45, 100, 46, 129, 171, 163, 216, 84, 134, 212, 135, 101, 112, 227, 63, 80, 67, 145, 101, 37, 32, 83, 73, 170, 49, 251, 31, 57, 81, 91, 40, 134, 18, 129, 139, 143, 194, 57, 213, 67, 85, 154, 4, 91, 117, 106, 192, 119, 97, 230, 236, 137, 216, 238, 185, 14, 243, 113, 230, 161, 5, 3, 249 }
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69af0af0-19ad-4f45-be61-82b78cbbfd3b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 1,
                            UserId = new Guid("1b1e3e41-2936-4dc7-98d5-f891828c675d")
                        });
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("EmailAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("OtpAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("EmailAuthenticators");

                    b.Navigation("OtpAuthenticators");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
