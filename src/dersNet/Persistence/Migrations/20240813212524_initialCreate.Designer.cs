// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20240813212524_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Choice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool>("IsAnswer")
                        .HasColumnType("bit")
                        .HasColumnName("IsAnswer");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("QuestionId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Choices", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ActivationKey");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time")
                        .HasColumnName("Duration");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Exams", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ExamQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ExamId");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("QuestionId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ExamQuestions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackId");

                    b.Property<int>("Quota")
                        .HasColumnType("int")
                        .HasColumnName("Quota");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7756e5ae-72ca-4099-81a8-54ca7a02aa5f"),
                            CreatedDate = new DateTime(2024, 8, 14, 0, 25, 22, 269, DateTimeKind.Local).AddTicks(6961),
                            LessonId = new Guid("39518ccb-9841-4453-9646-b3b2a4540cb8"),
                            Name = "Grup Yorum",
                            PackId = new Guid("3ebc5636-bccd-4c60-92f9-618c4fe06669"),
                            Quota = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.GroupUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("GroupUsers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Homework", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("SessionId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UploadFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UploadFile");

                    b.HasKey("Id");

                    b.ToTable("Homework", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.HomeworkTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Attachment");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<int>("HomeworkId")
                        .HasColumnType("int")
                        .HasColumnName("HomeworkId");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentId");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("TransferDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("HomeworkTransfers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<short>("Depth")
                        .HasColumnType("smallint")
                        .HasColumnName("Depth");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Lessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e457ead-19d9-481e-ac24-636a96dec0bf"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7771),
                            Depth = (short)0,
                            Order = 1,
                            Title = "İlkokul"
                        },
                        new
                        {
                            Id = new Guid("6e2ca6ca-2ea3-4574-aeae-8acf52a2d717"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7777),
                            Depth = (short)1,
                            Order = 1,
                            ParentId = new Guid("3e457ead-19d9-481e-ac24-636a96dec0bf"),
                            Title = "Temel Öğrenim"
                        },
                        new
                        {
                            Id = new Guid("559e4065-aa37-46e3-8320-2e22894d91ba"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7779),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("6e2ca6ca-2ea3-4574-aeae-8acf52a2d717"),
                            Title = "1. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("78ffee43-a5bd-42aa-9639-22fbd2f13b5d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7780),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("559e4065-aa37-46e3-8320-2e22894d91ba"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("3e07735a-d448-4041-b861-69912ab46f8b"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7795),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("559e4065-aa37-46e3-8320-2e22894d91ba"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("1e50c7da-8301-443a-9d8e-e77b782c6505"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7797),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("559e4065-aa37-46e3-8320-2e22894d91ba"),
                            Title = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("4a9231a1-c70e-4e4f-abcc-b06d537e19de"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7799),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("6e2ca6ca-2ea3-4574-aeae-8acf52a2d717"),
                            Title = "2. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("39eb20d1-adb7-4675-972e-65f94ae0171a"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7801),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("4a9231a1-c70e-4e4f-abcc-b06d537e19de"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("b8b53844-10ed-4455-9b05-49f941761e60"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7803),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("4a9231a1-c70e-4e4f-abcc-b06d537e19de"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("e32c2c6f-8bf7-4abd-9a21-ede78a351c84"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7805),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("4a9231a1-c70e-4e4f-abcc-b06d537e19de"),
                            Title = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("c9046194-122a-4826-b586-d1e1aff6e059"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7807),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("4a9231a1-c70e-4e4f-abcc-b06d537e19de"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("2ae8e78f-50ee-435b-bbeb-80b4cde7c9b1"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7809),
                            Depth = (short)1,
                            Order = 2,
                            ParentId = new Guid("3e457ead-19d9-481e-ac24-636a96dec0bf"),
                            Title = "İlkokul"
                        },
                        new
                        {
                            Id = new Guid("c24537a1-32ea-4230-8120-609e2274691c"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7813),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("2ae8e78f-50ee-435b-bbeb-80b4cde7c9b1"),
                            Title = "3. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("71e0b19a-6d7e-428c-8a1d-2183e6de6eaf"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7815),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("c24537a1-32ea-4230-8120-609e2274691c"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("799de9b9-1a84-40ee-9fe7-1dd18715b5d6"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7816),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("c24537a1-32ea-4230-8120-609e2274691c"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("c5942acf-5b90-45a1-acf0-086090318329"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7818),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("c24537a1-32ea-4230-8120-609e2274691c"),
                            Title = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("2d09ef21-cafb-4292-93ed-63458a53d218"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7820),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("c24537a1-32ea-4230-8120-609e2274691c"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("05808413-d7e9-4c26-936b-1fc71fdd5842"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7822),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("c24537a1-32ea-4230-8120-609e2274691c"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7825),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("2ae8e78f-50ee-435b-bbeb-80b4cde7c9b1"),
                            Title = "4. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("248bf051-f84d-47ee-ab49-00f12a7b8933"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7827),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("612595c7-44f8-4237-aa59-ac044ec919c5"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7830),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("82ffa176-e04a-4b8f-9d53-caf81ea84b4d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7833),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("928b815d-cf97-4240-8cd9-1f8bad834195"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7835),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("f8cf1321-9fb8-427b-b6b6-08ed45d66c60"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7868),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("b71a3b49-6332-436b-8129-cc3f4561356d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7870),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("4f1173f4-f126-4a1a-a14d-43324bdaaadf"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("9f3cf164-7e23-427e-b7d3-1b4f2498fa61"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7872),
                            Depth = (short)0,
                            Order = 2,
                            Title = "Ortaokul"
                        },
                        new
                        {
                            Id = new Guid("8d2f9831-bb8e-484b-9ea4-4947b3063d23"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7873),
                            Depth = (short)1,
                            Order = 1,
                            ParentId = new Guid("9f3cf164-7e23-427e-b7d3-1b4f2498fa61"),
                            Title = "LGS"
                        },
                        new
                        {
                            Id = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7875),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("8d2f9831-bb8e-484b-9ea4-4947b3063d23"),
                            Title = "5. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("b596124d-d3b2-4b71-8449-1ea93ce45301"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7879),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("ef1d1bec-980f-45f7-9d9c-5bce782ad64a"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7880),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("1638ccc4-4147-45db-b32c-c794ddf77a96"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7882),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("ab07a65c-5347-4fa1-a08d-064ab9101cd8"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7884),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("b075d084-84c3-4784-9f14-397ee1dd7f2e"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7886),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("ded7be7a-208d-4429-8caa-3d24320ad71f"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7889),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("5864afce-5632-4217-bf4e-1c67fd7e2bf1"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7891),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("8d2f9831-bb8e-484b-9ea4-4947b3063d23"),
                            Title = "6. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("acbbf170-0898-4237-9baf-67dd82b82f3e"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7893),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("c5134748-aba3-4972-af57-e668ef713ffd"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7896),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("a8f9aa4d-37ab-4d0e-902c-a4258688a62d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7898),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("8605d289-2793-422f-afd7-33d258d67a08"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7900),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("1e4446e4-c27e-4751-be99-8d1c7990599f"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7901),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("f30a3487-f477-4958-9058-56b2e214d9e9"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7903),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("4beacc6c-c462-4486-be3f-c79568545f33"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7906),
                            Depth = (short)2,
                            Order = 3,
                            ParentId = new Guid("8d2f9831-bb8e-484b-9ea4-4947b3063d23"),
                            Title = "7. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("6e243a4e-8e21-4766-ae19-fa1fa4674d1d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7908),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("75bae8f1-4f1b-4a72-9c1f-309e1b9b4e33"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7909),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("0cf0f0ac-3961-46de-8004-5a0adb7ec530"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7913),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            Title = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = new Guid("1ae68bf7-a824-4909-9362-80e1c306e048"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7915),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("ea3dbf97-55a6-4a94-8fb5-eeaf01cfe119"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7917),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("502b2494-b92b-4128-88c2-ae2a36f79f87"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7919),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("c06f0bd8-2610-48da-aa22-3ccd98e66774"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7920),
                            Depth = (short)2,
                            Order = 4,
                            ParentId = new Guid("8d2f9831-bb8e-484b-9ea4-4947b3063d23"),
                            Title = "8. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("62fb4861-4a3b-47e8-b531-9edaf63b9329"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7922),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            Title = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("81615dbd-4cea-4910-9872-cb0ab7ffef22"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7924),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("fdbfed7d-9e02-4b51-aaf7-b21879f89c9b"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7927),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            Title = "T.C. İnkılâp Tarihi ve Atatürkçülük"
                        },
                        new
                        {
                            Id = new Guid("399eee32-07b8-463c-8218-9d233e920b66"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7930),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            Title = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = new Guid("a46723cf-136d-4130-91b5-d5d2306e2ff9"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7931),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("b8b01c52-d964-41fb-a16b-2ccf49a2de73"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7933),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("3a8ed647-1ef0-480b-81ce-373abe1095eb"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("39518ccb-9841-4453-9646-b3b2a4540cb8"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7935),
                            Depth = (short)0,
                            Order = 3,
                            Title = "Lise"
                        },
                        new
                        {
                            Id = new Guid("eae38c65-3762-464c-8ef3-0c6ed20ce9c6"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7937),
                            Depth = (short)1,
                            Order = 1,
                            ParentId = new Guid("39518ccb-9841-4453-9646-b3b2a4540cb8"),
                            Title = "TYT"
                        },
                        new
                        {
                            Id = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7939),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("eae38c65-3762-464c-8ef3-0c6ed20ce9c6"),
                            Title = "9. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("20727c16-d102-460a-9df4-c6c2843658f4"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7940),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Türk Dili ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("9e0902b7-3c9b-48b9-9d92-3aa47aab9cd3"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7942),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("d159f766-00cf-4e84-a2b4-52a0117f8eb0"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7944),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("a652b030-53e7-49b2-a1ea-3e53db178cc2"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7947),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("a1c42876-1ea0-4d5e-a627-b128e2d98a24"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7949),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("610ceaf1-41ce-4f36-b176-632768d965db"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7951),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("a1c42876-1ea0-4d5e-a627-b128e2d98a24"),
                            Title = "Almanca"
                        },
                        new
                        {
                            Id = new Guid("d99b053e-4acd-4aaa-8641-2239da5a1dba"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7953),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("a1c42876-1ea0-4d5e-a627-b128e2d98a24"),
                            Title = "İngilizce"
                        },
                        new
                        {
                            Id = new Guid("ea95a394-5b39-4b78-a2d9-7f5a4c715226"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7955),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("f9ba402d-6d94-455b-a557-34e0cfdb0c6f"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7958),
                            Depth = (short)3,
                            Order = 7,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("0d8f6f6d-8c84-41c5-896f-b4924b13c37e"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7960),
                            Depth = (short)3,
                            Order = 8,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("6dfb4dc7-e6c7-4c6b-98d4-69bc395fa02c"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7961),
                            Depth = (short)3,
                            Order = 9,
                            ParentId = new Guid("8adaf0d0-9678-4005-afdf-9f7b1c176008"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7965),
                            Depth = (short)2,
                            Order = 2,
                            ParentId = new Guid("eae38c65-3762-464c-8ef3-0c6ed20ce9c6"),
                            Title = "10. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("a80ac2cc-424b-4aa0-859f-a6de1590baac"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7966),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Türk Dili ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("d2df4118-adc7-4a9d-9b0f-cb3d313f8396"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7968),
                            Depth = (short)3,
                            Order = 2,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("12dc0c91-1314-4f7f-ae98-702b15241eed"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7970),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("50b3f0d3-ddf4-4992-90c8-605e0519ea1d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7972),
                            Depth = (short)3,
                            Order = 4,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("9a8006f4-266a-4a69-9c9e-2d228546c1bd"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7974),
                            Depth = (short)3,
                            Order = 5,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Yabancı Dil"
                        },
                        new
                        {
                            Id = new Guid("f70ef628-cf7b-4a55-af8e-417f0d424994"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7975),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("9a8006f4-266a-4a69-9c9e-2d228546c1bd"),
                            Title = "Almanca"
                        },
                        new
                        {
                            Id = new Guid("f08b326e-e46b-4753-88d8-8830953eb882"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7977),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("9a8006f4-266a-4a69-9c9e-2d228546c1bd"),
                            Title = "İngilizce"
                        },
                        new
                        {
                            Id = new Guid("334234af-557d-46ef-9034-8d8564562328"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7980),
                            Depth = (short)3,
                            Order = 6,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("a1ea88d5-2191-47f0-8275-14f941b1bef5"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7982),
                            Depth = (short)3,
                            Order = 7,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("eb82d4e3-c866-4666-97b1-89601bcf170e"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7984),
                            Depth = (short)3,
                            Order = 8,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("ec355afb-7786-4017-9dc3-8e39e95506bd"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7986),
                            Depth = (short)3,
                            Order = 9,
                            ParentId = new Guid("14b64e32-f6f4-4f9c-94da-fdf7fe441cdf"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("38347a63-6245-4ba9-8751-dc575faf2d11"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(7988),
                            Depth = (short)1,
                            Order = 2,
                            ParentId = new Guid("39518ccb-9841-4453-9646-b3b2a4540cb8"),
                            Title = "AYT"
                        },
                        new
                        {
                            Id = new Guid("9746069b-8666-4ca4-8176-5c823c48c8a3"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8009),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("38347a63-6245-4ba9-8751-dc575faf2d11"),
                            Title = "11. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("69492844-649c-455d-8516-305903719272"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8011),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("9746069b-8666-4ca4-8176-5c823c48c8a3"),
                            Title = "Sayısal"
                        },
                        new
                        {
                            Id = new Guid("bee04171-55eb-4b38-950a-854be7d07f34"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8013),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("69492844-649c-455d-8516-305903719272"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("b962f259-4b15-442c-a90b-0aed32271205"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8016),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("69492844-649c-455d-8516-305903719272"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("0d808fcf-0071-4e3f-b964-ddefede7e3d7"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8018),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("69492844-649c-455d-8516-305903719272"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("7e7cd9ea-26ce-4150-bb82-a9ff50788f5c"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8020),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("69492844-649c-455d-8516-305903719272"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("0d09c27a-dfb4-4147-a816-cda3496b5781"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8022),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("69492844-649c-455d-8516-305903719272"),
                            Title = "Geometri"
                        },
                        new
                        {
                            Id = new Guid("e5f38ee8-290a-4e03-8fe7-e7c4bbfbfa2d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8024),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("9746069b-8666-4ca4-8176-5c823c48c8a3"),
                            Title = "Sözel"
                        },
                        new
                        {
                            Id = new Guid("d9582e10-04d8-4cda-a3b2-6960ce10fe8a"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8026),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("e5f38ee8-290a-4e03-8fe7-e7c4bbfbfa2d"),
                            Title = "Türk Dili Ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("2948e020-aa33-41ab-a5cc-9d1a5a5ca29c"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8027),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("e5f38ee8-290a-4e03-8fe7-e7c4bbfbfa2d"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("a86320cd-5831-434c-98ba-ea5dccee0f57"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8029),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("e5f38ee8-290a-4e03-8fe7-e7c4bbfbfa2d"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("399b58b5-1347-4da4-869e-6a4cb6f61c3e"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8032),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("e5f38ee8-290a-4e03-8fe7-e7c4bbfbfa2d"),
                            Title = "Felsefe"
                        },
                        new
                        {
                            Id = new Guid("6c21c559-b21a-4142-a4fc-94d37abe4c6d"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8034),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("e5f38ee8-290a-4e03-8fe7-e7c4bbfbfa2d"),
                            Title = "Din Kültürü Ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = new Guid("3f7f40cd-7072-42b0-9838-540b92284e06"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8036),
                            Depth = (short)2,
                            Order = 1,
                            ParentId = new Guid("38347a63-6245-4ba9-8751-dc575faf2d11"),
                            Title = "12. Sınıf"
                        },
                        new
                        {
                            Id = new Guid("5c30d475-3d43-45d8-bd0b-4274657338bc"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8038),
                            Depth = (short)3,
                            Order = 1,
                            ParentId = new Guid("3f7f40cd-7072-42b0-9838-540b92284e06"),
                            Title = "Sayısal"
                        },
                        new
                        {
                            Id = new Guid("8c86e214-5773-404c-8265-5afded0b5024"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8039),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("5c30d475-3d43-45d8-bd0b-4274657338bc"),
                            Title = "Matematik"
                        },
                        new
                        {
                            Id = new Guid("bb17ac09-6505-4368-8072-6b10174304c4"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8041),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("5c30d475-3d43-45d8-bd0b-4274657338bc"),
                            Title = "Fizik"
                        },
                        new
                        {
                            Id = new Guid("ed8a15eb-701d-4413-8035-d9f903fe0dd4"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8043),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("5c30d475-3d43-45d8-bd0b-4274657338bc"),
                            Title = "Biyoloji"
                        },
                        new
                        {
                            Id = new Guid("5ac71ebb-a8ab-4a2d-91a9-47f3a530b95e"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8045),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("5c30d475-3d43-45d8-bd0b-4274657338bc"),
                            Title = "Kimya"
                        },
                        new
                        {
                            Id = new Guid("17c5a5ac-e859-4e5b-9bbe-29ca06838a89"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8048),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("5c30d475-3d43-45d8-bd0b-4274657338bc"),
                            Title = "Geometri"
                        },
                        new
                        {
                            Id = new Guid("36571a1e-ac7b-4d3f-9912-48b8826a9cff"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8050),
                            Depth = (short)3,
                            Order = 3,
                            ParentId = new Guid("3f7f40cd-7072-42b0-9838-540b92284e06"),
                            Title = "Sözel"
                        },
                        new
                        {
                            Id = new Guid("06ed2c92-bf64-4b54-a9db-58eab0eb7682"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8051),
                            Depth = (short)4,
                            Order = 1,
                            ParentId = new Guid("36571a1e-ac7b-4d3f-9912-48b8826a9cff"),
                            Title = "Türk Dili Ve Edebiyatı"
                        },
                        new
                        {
                            Id = new Guid("7488623f-230f-48ab-a0b7-1d128df83d14"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8053),
                            Depth = (short)4,
                            Order = 2,
                            ParentId = new Guid("36571a1e-ac7b-4d3f-9912-48b8826a9cff"),
                            Title = "Tarih"
                        },
                        new
                        {
                            Id = new Guid("edd9d215-5965-474b-acf9-430091724ad4"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8055),
                            Depth = (short)4,
                            Order = 3,
                            ParentId = new Guid("36571a1e-ac7b-4d3f-9912-48b8826a9cff"),
                            Title = "Coğrafya"
                        },
                        new
                        {
                            Id = new Guid("5bf9b901-66df-4c38-81c3-54c77e2bc4b0"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8057),
                            Depth = (short)4,
                            Order = 4,
                            ParentId = new Guid("36571a1e-ac7b-4d3f-9912-48b8826a9cff"),
                            Title = "Felsefe"
                        },
                        new
                        {
                            Id = new Guid("ef54275b-1094-4d05-8aac-76b033db9c7c"),
                            CreatedDate = new DateTime(2024, 8, 13, 21, 25, 22, 270, DateTimeKind.Utc).AddTicks(8058),
                            Depth = (short)4,
                            Order = 5,
                            ParentId = new Guid("36571a1e-ac7b-4d3f-9912-48b8826a9cff"),
                            Title = "Din Kültürü Ve Ahlak Bilgisi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OnBasvuru", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<double>("NotOrtalamasi")
                        .HasColumnType("float")
                        .HasColumnName("NotOrtalamasi");

                    b.Property<string>("OgrCepNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OgrCepNo");

                    b.Property<string>("OgrEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OgrEmail");

                    b.Property<string>("OkulAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OkulAdi");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("VeliCepNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VeliCepNo");

                    b.Property<string>("VeliFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VeliFirstName");

                    b.Property<string>("VeliLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VeliLastName");

                    b.HasKey("Id");

                    b.ToTable("OnBasvurus", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Read"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Write"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.RevokeToken"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Read"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Write"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Create"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Update"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Delete"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Admin"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Read"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Write"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Create"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Update"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Delete"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Admin"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Read"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Write"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Create"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Update"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Delete"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Admin"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Read"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Write"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Create"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Update"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Choices.Delete"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Admin"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Read"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Write"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Create"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Update"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Courses.Delete"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Admin"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Read"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Write"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Create"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Update"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Exams.Delete"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Admin"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Read"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Write"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Create"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Update"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.Delete"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Admin"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Read"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Write"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Create"
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Update"
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Delete"
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Admin"
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Read"
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Write"
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Create"
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Update"
                        },
                        new
                        {
                            Id = 59,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groups.Delete"
                        },
                        new
                        {
                            Id = 60,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Admin"
                        },
                        new
                        {
                            Id = 61,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Read"
                        },
                        new
                        {
                            Id = 62,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Write"
                        },
                        new
                        {
                            Id = 63,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Create"
                        },
                        new
                        {
                            Id = 64,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Update"
                        },
                        new
                        {
                            Id = 65,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GroupUsers.Delete"
                        },
                        new
                        {
                            Id = 66,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Admin"
                        },
                        new
                        {
                            Id = 67,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Read"
                        },
                        new
                        {
                            Id = 68,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Write"
                        },
                        new
                        {
                            Id = 69,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Create"
                        },
                        new
                        {
                            Id = 70,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Update"
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Delete"
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Admin"
                        },
                        new
                        {
                            Id = 73,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Read"
                        },
                        new
                        {
                            Id = 74,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Write"
                        },
                        new
                        {
                            Id = 75,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Create"
                        },
                        new
                        {
                            Id = 76,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Update"
                        },
                        new
                        {
                            Id = 77,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HomeworkTransfers.Delete"
                        },
                        new
                        {
                            Id = 78,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Admin"
                        },
                        new
                        {
                            Id = 79,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Read"
                        },
                        new
                        {
                            Id = 80,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Write"
                        },
                        new
                        {
                            Id = 81,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Create"
                        },
                        new
                        {
                            Id = 82,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Update"
                        },
                        new
                        {
                            Id = 83,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.Delete"
                        },
                        new
                        {
                            Id = 84,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Admin"
                        },
                        new
                        {
                            Id = 85,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Read"
                        },
                        new
                        {
                            Id = 86,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Write"
                        },
                        new
                        {
                            Id = 87,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Create"
                        },
                        new
                        {
                            Id = 88,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Update"
                        },
                        new
                        {
                            Id = 89,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Packs.Delete"
                        },
                        new
                        {
                            Id = 90,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Admin"
                        },
                        new
                        {
                            Id = 91,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Read"
                        },
                        new
                        {
                            Id = 92,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Write"
                        },
                        new
                        {
                            Id = 93,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Create"
                        },
                        new
                        {
                            Id = 94,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Update"
                        },
                        new
                        {
                            Id = 95,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Questions.Delete"
                        },
                        new
                        {
                            Id = 96,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Admin"
                        },
                        new
                        {
                            Id = 97,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Read"
                        },
                        new
                        {
                            Id = 98,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Write"
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Create"
                        },
                        new
                        {
                            Id = 100,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Update"
                        },
                        new
                        {
                            Id = 101,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Delete"
                        },
                        new
                        {
                            Id = 102,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Admin"
                        },
                        new
                        {
                            Id = 103,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Read"
                        },
                        new
                        {
                            Id = 104,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Write"
                        },
                        new
                        {
                            Id = 105,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Create"
                        },
                        new
                        {
                            Id = 106,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Update"
                        },
                        new
                        {
                            Id = 107,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sessions.Delete"
                        },
                        new
                        {
                            Id = 108,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Admin"
                        },
                        new
                        {
                            Id = 109,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Read"
                        },
                        new
                        {
                            Id = 110,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Write"
                        },
                        new
                        {
                            Id = 111,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Create"
                        },
                        new
                        {
                            Id = 112,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Update"
                        },
                        new
                        {
                            Id = 113,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Homework.Delete"
                        },
                        new
                        {
                            Id = 114,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lessons.GetListWithParent"
                        },
                        new
                        {
                            Id = 115,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExamQuestions.GetListQuestinWithExam"
                        },
                        new
                        {
                            Id = 116,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Admin"
                        },
                        new
                        {
                            Id = 117,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Read"
                        },
                        new
                        {
                            Id = 118,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Write"
                        },
                        new
                        {
                            Id = 119,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Create"
                        },
                        new
                        {
                            Id = 120,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Update"
                        },
                        new
                        {
                            Id = 121,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OnBasvurus.Delete"
                        },
                        new
                        {
                            Id = 122,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Admin"
                        },
                        new
                        {
                            Id = 123,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Read"
                        },
                        new
                        {
                            Id = 124,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Write"
                        },
                        new
                        {
                            Id = 125,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Create"
                        },
                        new
                        {
                            Id = 126,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Update"
                        },
                        new
                        {
                            Id = 127,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PackCourses.Delete"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<byte[]>("SecretKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("SecretKey");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Pack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<int>("PriceCurrency")
                        .HasColumnType("int")
                        .HasColumnName("PriceCurrency");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int")
                        .HasColumnName("TaxRate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Packs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ebc5636-bccd-4c60-92f9-618c4fe06669"),
                            CreatedDate = new DateTime(2024, 8, 14, 0, 25, 22, 272, DateTimeKind.Local).AddTicks(2519),
                            Description = "dsa",
                            Price = 45m,
                            PriceCurrency = 1,
                            TaxRate = 0,
                            Title = "Fırsat Paketi"
                        },
                        new
                        {
                            Id = new Guid("75367c3e-8175-4290-b67b-51f32b28e348"),
                            CreatedDate = new DateTime(2024, 8, 14, 0, 25, 22, 272, DateTimeKind.Local).AddTicks(2533),
                            Description = "dsa",
                            Price = 45m,
                            PriceCurrency = 1,
                            TaxRate = 0,
                            Title = "Aile Paketi"
                        },
                        new
                        {
                            Id = new Guid("92eee2bf-9088-4939-b01a-8bebbb4f66a7"),
                            CreatedDate = new DateTime(2024, 8, 14, 0, 25, 22, 272, DateTimeKind.Local).AddTicks(2541),
                            Description = "dsa",
                            Price = 45m,
                            PriceCurrency = 1,
                            TaxRate = 0,
                            Title = "Deneme Paketi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PackCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("PackId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PackId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("PackCourses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Questions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedByIp");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpiresDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiresDate");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReplacedByToken");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RevokedByIp");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RevokedDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Token");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("Description");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LessonId");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("int")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("af7a6a34-4e3e-4ed9-b3ee-eecfeb525fb8"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dersnet@zurafworks",
                            FirstName = "Ahmet",
                            LastName = "Çiftçi",
                            PasswordHash = new byte[] { 233, 129, 141, 74, 1, 168, 162, 154, 32, 250, 204, 227, 152, 228, 38, 29, 43, 100, 9, 145, 224, 250, 60, 168, 115, 143, 236, 147, 4, 152, 44, 241, 23, 84, 246, 32, 251, 210, 50, 119, 192, 238, 213, 53, 16, 181, 116, 156, 242, 139, 177, 124, 227, 183, 140, 226, 161, 124, 25, 88, 104, 81, 99, 73 },
                            PasswordSalt = new byte[] { 213, 125, 82, 114, 151, 25, 195, 168, 166, 133, 173, 64, 248, 236, 34, 129, 78, 183, 37, 187, 48, 239, 101, 9, 196, 53, 108, 95, 20, 93, 198, 126, 44, 153, 135, 35, 143, 161, 31, 148, 49, 107, 210, 207, 121, 212, 104, 220, 65, 193, 43, 96, 204, 3, 54, 238, 216, 90, 228, 227, 50, 159, 95, 239, 71, 204, 46, 230, 3, 253, 226, 223, 81, 13, 193, 174, 250, 96, 157, 221, 2, 79, 83, 17, 72, 129, 117, 238, 122, 101, 186, 177, 174, 174, 114, 46, 194, 25, 250, 78, 81, 240, 173, 249, 156, 92, 189, 18, 238, 57, 232, 142, 162, 112, 111, 179, 24, 196, 64, 227, 252, 0, 125, 66, 73, 116, 88, 180 }
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1665ea22-0662-4055-b4ba-c9def3b4d379"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 1,
                            UserId = new Guid("af7a6a34-4e3e-4ed9-b3ee-eecfeb525fb8")
                        });
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("EmailAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("OtpAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("EmailAuthenticators");

                    b.Navigation("OtpAuthenticators");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
